name: Auto-Generate PR Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    # Optional: only run on specific paths
    # paths:
    #   - 'src/**'
    #   - 'pages/**'
    #   - 'components/**'

jobs:
  generate-tests:
    runs-on: ubuntu-latest

    # Optional: only run if PR is not from a fork (for security)
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Option 1: Wait for preview URLs (Vercel, Netlify, etc.)
      - name: Generate and run tests (with preview URL detection)
        uses: yourusername/pr-test-generator@v1
        with:
          claude-api-key: ${{ secrets.CLAUDE_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          wait-for-preview: "120" # Wait up to 2 minutes for preview URLs
          test-examples: |
            import { test, expect } from 'magnitude';

            test('should load main page', async (page) => {
              await page.goto('/');  # Will use detected preview URL
              await page.waitForSelector('h1');
              expect(await page.textContent('h1')).toBe('Welcome');
            });

    # Option 2: Use a specific base URL
    # - name: Generate and run tests (with custom base URL)
    #   uses: yourusername/pr-test-generator@v1
    #   with:
    #     claude-api-key: ${{ secrets.CLAUDE_API_KEY }}
    #     base-url: 'https://my-staging-env.example.com'
    #     test-examples: |
    #       import { test, expect } from 'magnitude';
    #
    #       test('should handle navigation', async (page) => {
    #         await page.goto('/dashboard');
    #         await page.waitForSelector('.dashboard-header');
    #       });

    # Option 3: Use localhost (for self-hosted runners with local dev server)
    # - name: Start dev server
    #   run: npm run dev &
    #
    # - name: Generate and run tests (localhost)
    #   uses: yourusername/pr-test-generator@v1
    #   with:
    #     claude-api-key: ${{ secrets.CLAUDE_API_KEY }}
    #     base-url: 'http://localhost:3000'
